#!/usr/bin/python
# coding=utf-8

'''
Created on Dec 11, 2015

@author: Allis Tauri <allista@gmail.com>
'''
import os

from BioUtils.GeneClusters import ClusterDiagram
from BioUtils.Tools.Multiprocessing import MPMain


class Main(MPMain):
    description = 'Draw cluster diagrams from genomes annotated by find_clusters.'

    def _main(self):
        self.argument('projects', metavar='/path/to/project.file', nargs='+',
                      type=str, help='Project files with cluster tags and other options.')

        # self.argument('files', metavar='/path/to/genome.file', nargs='*',
        #               type=str, help='Files with annotated genomes.')
        #
        # self.argument('-o', '--order', default=None, metavar='str', nargs='+',
        #               type=str,
        #               help='A list of accession numbers separated by spaces to reorder the clusters on a diagram.')
        #
        # self.argument('-C', '--crosslinks', action='store_true',
        #               help='Add cross-links between regions of the clusters that correspond to blastp alignments of '
        #                    'genes from the upper (on the diagram) cluster to the lower cluster.')
        # self.argument('-e', '--evalue', default=0.0001, metavar='float',
        #               type=float,
        #               help='E-value to filter blastp results used to produce cross-links.')
        # self.argument('-l', '--min-length', default=0, metavar='float',
        #               type=float,
        #               help='Minimum length of an alignment relative to the query length to filter blastp results '
        #                    'used to produce cross-links.')
        # self.argument('-i', '--min-identity', default=0, metavar='float',
        #               type=float, help='Filter out alignments with identity percent less then this.')
        #
        # self.argument('-p', '--page-size', default='A4', metavar='str',
        #               type=str,
        #               help='Page size of the produced drawing. Default "A4".')
        # self.argument('--no-border', action='store_true',
        #               help='Disables black border around arrows representing genes.')
        # self.argument('--no-color', action='store_true',
        #               help='Do not use colors automatically assigned to genes by find_cluster, '
        #                    'and if -C is given, to indicate identity percent of cross-links.')
        self.parse_args()
        for project in self.args.projects:
            if self.abort_event.is_set(): break
            if not os.path.isfile(project):
                print 'No such file: %s' % project
                continue
            diagram = ClusterDiagram(self.abort_event)
            if not diagram.load(project, self.args):
                continue
            if not diagram.extract_clusters():
                print 'No annotated clusters were found in provided genomes.\nTags searched: %s' % ', '.join(diagram.tags)
                continue
            diagram.draw_clusters()
            print
        return 0

if __name__ == '__main__':
    Main(run=True)
